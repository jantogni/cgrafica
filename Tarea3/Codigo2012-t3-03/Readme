Tarea 2: Computación Gráfica 

Autor: Jonathan Antognini C.

Snoopy:
	Esta tarea se programó y ejecutó usando Linux (Ubuntu 10.10). En el siguiente archivo se escribirá una pequeña
	reseña de cada punto solicitado en la tarea.

1. Los controles para desplazar la figura completa, es decir, el snoopy y el cuadro, son las flechas siguiendo la lógica de cada una. Estos botones son
	(flechas) son definiciones de glut. Para mover solamente la caja, se usaron los botones 
	- a: izquerda
	- s: abajo
	- d: derecha
	- w: arriba

	Y para cambiar la dimensión de la figura, para hacer agrandarla o, achicarla i.
	
	Las funciones que que se añadieron en el main fueron glutKeyboardFunc(arg1): para las flechas, y glutSpecialFunc(arg2): para las teclas especiales. arg1 y
	arg2 son las funciones donde se "captura" la tecla apretada, y se realiza un cálculo de offset.

	Cada uno de estos movimientos generaba cambios en el display del snoopy. Por ejemplo si paretaba flecha izquerda, debía desplazar ambas cosas, y estos se 
	realizó usando una variable global como offset, es decir, para este ejemplo se le restaba un factor de coordenada. En cada caso se realiza el ajuste del 
	offset de la figura y del snoopy. Para las letras a,s,d,w es una forma similar, pero solo se modifica el offset de la caja. Estas variables se manejan de
	forma global.

	Entonces la idea a grandes rasgos fue:
	- Identificar las teclas de movimiento
	- Cuando se apreta una, se recalcula un offset (ya sea de movimiento o de zoom)
	- Cuando se va a hacer un display del snoopy, se recalculan los puntos donde aparecerá el snoopy.
	- Cuando llamo la función displays(), que también se ocupó para mantener las dimensiones de snoopy, se aplica un factor zoom ahora.
	- Se iteran nuevamente los pasos anteriores.

	Respecto a que el snoopy se mantuviera dentro del cuadro, no logré hacerlo funcionar a la perfección por lo que no lo añadí al código. Sin embargo
	lo que se intentó hacer fue:
	- Calcular las dimensiones del snoopy, y que, por ejemplo el (x_min + dim_x,y_min + dim_y), es decir, tomaba el extremo más a la derecha, y que ese punto
	no superara la dimensión de la ventana. Mientras que por el lado izquerdo, esas coordenadas no estuvieran más a la izquerda o abajo de la ventana. Como dije
	no me funcionó apropiadamente.

2. Para correr el programa es necesario realizar un:
	make
	make run
